<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title }}</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'hasphp': {
                            50: '#f0f9ff',
                            100: '#e0f2fe', 
                            500: '#0ea5e9',
                            600: '#0284c7',
                            700: '#0369a1',
                        }
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-gray-50 min-h-screen">
    <div x-data="blogApp()" class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Header -->
        <header class="text-center mb-12">
            <h1 class="text-4xl font-bold text-gray-900 mb-4">
                üöÄ HasPHP Framework v2.0
            </h1>
            <p class="text-xl text-gray-600 mb-6">
                High-Performance PHP Framework Demo
            </p>
            <div class="flex flex-wrap justify-center gap-4 text-sm">
                <span class="bg-hasphp-100 text-hasphp-700 px-3 py-1 rounded-full">‚ö° OpenSwoole Powered</span>
                <span class="bg-green-100 text-green-700 px-3 py-1 rounded-full">üéØ Laravel-like API</span>
                <span class="bg-purple-100 text-purple-700 px-3 py-1 rounded-full">üî• SPA-like Experience</span>
                <span class="bg-blue-100 text-blue-700 px-3 py-1 rounded-full">üíæ Multi-Database</span>
            </div>
        </header>

        <!-- Stats Dashboard -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
            <div class="bg-white rounded-lg shadow-md p-6">
                <div class="flex items-center">
                    <div class="text-2xl font-bold text-gray-900" x-text="stats.posts?.published || 0"></div>
                    <div class="ml-auto text-blue-500">üìù</div>
                </div>
                <div class="text-sm text-gray-600">Published Posts</div>
            </div>
            <div class="bg-white rounded-lg shadow-md p-6">
                <div class="flex items-center">
                    <div class="text-2xl font-bold text-gray-900" x-text="stats.users?.active || 0"></div>
                    <div class="ml-auto text-green-500">üë•</div>
                </div>
                <div class="text-sm text-gray-600">Active Users</div>
            </div>
            <div class="bg-white rounded-lg shadow-md p-6">
                <div class="flex items-center">
                    <div class="text-2xl font-bold text-gray-900" x-text="stats.tags?.total || 0"></div>
                    <div class="ml-auto text-purple-500">üè∑Ô∏è</div>
                </div>
                <div class="text-sm text-gray-600">Tags</div>
            </div>
            <div class="bg-white rounded-lg shadow-md p-6">
                <div class="flex items-center">
                    <div class="text-2xl font-bold text-gray-900" x-text="stats.comments?.approved || 0"></div>
                    <div class="ml-auto text-yellow-500">üí¨</div>
                </div>
                <div class="text-sm text-gray-600">Comments</div>
            </div>
        </div>

        <!-- Navigation Tabs -->
        <div class="mb-8">
            <nav class="flex space-x-8 border-b border-gray-200">
                <button @click="activeTab = 'posts'" 
                        :class="activeTab === 'posts' ? 'border-hasphp-500 text-hasphp-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'"
                        class="whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm">
                    Blog Posts
                </button>
                <button @click="activeTab = 'users'" 
                        :class="activeTab === 'users' ? 'border-hasphp-500 text-hasphp-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'"
                        class="whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm">
                    Users
                </button>
                <button @click="activeTab = 'tags'" 
                        :class="activeTab === 'tags' ? 'border-hasphp-500 text-hasphp-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'"
                        class="whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm">
                    Tags
                </button>
                <button @click="activeTab = 'api'" 
                        :class="activeTab === 'api' ? 'border-hasphp-500 text-hasphp-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'"
                        class="whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm">
                    API Test
                </button>
            </nav>
        </div>

        <!-- Posts Tab -->
        <div x-show="activeTab === 'posts'" class="space-y-6">
            <div class="flex justify-between items-center">
                <h2 class="text-2xl font-bold text-gray-900">Latest Blog Posts</h2>
                <div class="flex items-center space-x-4">
                    <select x-model="postsFilter" @change="loadPosts()" class="rounded-md border-gray-300 shadow-sm">
                        <option value="">All Posts</option>
                        <option value="featured=1">Featured Only</option>
                    </select>
                    <button @click="loadPosts()" class="bg-hasphp-500 hover:bg-hasphp-600 text-white px-4 py-2 rounded-md text-sm">
                        üîÑ Refresh
                    </button>
                </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <template x-for="post in posts" :key="post.id">
                    <article class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
                        <div class="p-6">
                            <div class="flex items-center justify-between mb-2">
                                <span x-show="post.featured" class="bg-yellow-100 text-yellow-800 text-xs font-medium px-2.5 py-0.5 rounded">
                                    ‚≠ê Featured
                                </span>
                                <span class="text-sm text-gray-500" x-text="formatDate(post.created_at)"></span>
                            </div>
                            
                            <h3 class="text-lg font-semibold text-gray-900 mb-2" x-text="post.title"></h3>
                            <p class="text-gray-600 mb-4 text-sm" x-text="post.excerpt"></p>
                            
                            <div class="flex items-center justify-between">
                                <div class="flex items-center space-x-2">
                                    <div class="w-6 h-6 bg-gray-300 rounded-full flex items-center justify-center text-xs">
                                        üë§
                                    </div>
                                    <span class="text-sm text-gray-700" x-text="post.author_name"></span>
                                </div>
                                <div class="flex items-center space-x-4 text-sm text-gray-500">
                                    <span x-text="post.views_count + ' views'"></span>
                                    <button @click="viewPost(post.slug)" class="text-hasphp-600 hover:text-hasphp-800">
                                        Read more ‚Üí
                                    </button>
                                </div>
                            </div>
                            
                            <div class="flex flex-wrap gap-1 mt-3" x-show="post.tags && post.tags.length">
                                <template x-for="tag in post.tags" :key="tag.slug">
                                    <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium text-white"
                                          :style="'background-color: ' + tag.color"
                                          x-text="tag.name"></span>
                                </template>
                            </div>
                        </div>
                    </article>
                </template>
            </div>

            <div x-show="posts.length === 0 && !loading" class="text-center py-12">
                <div class="text-gray-500 text-lg">No posts found</div>
            </div>
        </div>

        <!-- Users Tab -->
        <div x-show="activeTab === 'users'" class="space-y-6">
            <div class="flex justify-between items-center">
                <h2 class="text-2xl font-bold text-gray-900">Community Users</h2>
                <button @click="loadUsers()" class="bg-hasphp-500 hover:bg-hasphp-600 text-white px-4 py-2 rounded-md text-sm">
                    üîÑ Refresh
                </button>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <template x-for="user in users" :key="user.id">
                    <div class="bg-white rounded-lg shadow-md p-6">
                        <div class="flex items-center space-x-4 mb-4">
                            <div class="w-12 h-12 bg-gradient-to-r from-hasphp-400 to-hasphp-600 rounded-full flex items-center justify-center text-white font-bold text-lg">
                                <span x-text="user.name.charAt(0)"></span>
                            </div>
                            <div>
                                <h3 class="text-lg font-semibold text-gray-900" x-text="user.name"></h3>
                                <p class="text-sm text-gray-500" x-text="user.email"></p>
                            </div>
                        </div>
                        
                        <p class="text-gray-600 mb-4 text-sm" x-text="user.bio || 'No bio available'"></p>
                        
                        <div class="flex justify-between text-sm">
                            <span class="text-gray-500">Posts: <strong x-text="user.posts_count || 0"></strong></span>
                            <span class="text-gray-500">Joined: <strong x-text="formatDate(user.created_at)"></strong></span>
                        </div>
                    </div>
                </template>
            </div>
        </div>

        <!-- Tags Tab -->
        <div x-show="activeTab === 'tags'" class="space-y-6">
            <div class="flex justify-between items-center">
                <h2 class="text-2xl font-bold text-gray-900">Popular Tags</h2>
                <button @click="loadTags()" class="bg-hasphp-500 hover:bg-hasphp-600 text-white px-4 py-2 rounded-md text-sm">
                    üîÑ Refresh
                </button>
            </div>

            <div class="flex flex-wrap gap-3">
                <template x-for="tag in tags" :key="tag.id">
                    <button @click="filterByTag(tag.slug)" 
                            class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium text-white hover:opacity-80 transition-opacity"
                            :style="'background-color: ' + tag.color">
                        <span x-text="tag.name"></span>
                        <span class="ml-2 bg-white bg-opacity-20 px-2 py-0.5 rounded-full text-xs" x-text="tag.posts_count"></span>
                    </button>
                </template>
            </div>
        </div>

        <!-- API Test Tab -->
        <div x-show="activeTab === 'api'" class="space-y-6">
            <h2 class="text-2xl font-bold text-gray-900 mb-6">API Endpoints Test</h2>
            
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <div class="bg-white rounded-lg shadow-md p-6">
                    <h3 class="text-lg font-semibold mb-4">Available Endpoints</h3>
                    <div class="space-y-2 text-sm">
                        <div class="flex"><span class="text-green-600 font-mono">GET</span><span class="ml-3">/api/posts</span></div>
                        <div class="flex"><span class="text-green-600 font-mono">GET</span><span class="ml-3">/api/posts/{slug}</span></div>
                        <div class="flex"><span class="text-blue-600 font-mono">POST</span><span class="ml-3">/api/posts</span></div>
                        <div class="flex"><span class="text-green-600 font-mono">GET</span><span class="ml-3">/api/users</span></div>
                        <div class="flex"><span class="text-green-600 font-mono">GET</span><span class="ml-3">/api/users/{id}</span></div>
                        <div class="flex"><span class="text-green-600 font-mono">GET</span><span class="ml-3">/api/tags</span></div>
                        <div class="flex"><span class="text-green-600 font-mono">GET</span><span class="ml-3">/api/tags/{slug}</span></div>
                        <div class="flex"><span class="text-green-600 font-mono">GET</span><span class="ml-3">/api/stats</span></div>
                    </div>
                </div>
                
                <div class="bg-white rounded-lg shadow-md p-6">
                    <h3 class="text-lg font-semibold mb-4">Test API Call</h3>
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Endpoint</label>
                            <select x-model="testEndpoint" class="w-full rounded-md border-gray-300 shadow-sm">
                                <option value="/api/posts">GET /api/posts</option>
                                <option value="/api/users">GET /api/users</option>
                                <option value="/api/tags">GET /api/tags</option>
                                <option value="/api/stats">GET /api/stats</option>
                            </select>
                        </div>
                        <button @click="testApiCall()" class="w-full bg-hasphp-500 hover:bg-hasphp-600 text-white font-bold py-2 px-4 rounded">
                            üß™ Test API Call
                        </button>
                        <div x-show="apiResponse" class="mt-4">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Response</label>
                            <pre class="bg-gray-100 p-4 rounded-md text-xs overflow-auto max-h-64" x-text="JSON.stringify(apiResponse, null, 2)"></pre>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Loading State -->
        <div x-show="loading" class="fixed inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center z-50">
            <div class="bg-white rounded-lg p-6 flex items-center space-x-4">
                <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-hasphp-500"></div>
                <span class="text-lg">Loading...</span>
            </div>
        </div>

        <!-- Footer -->
        <footer class="mt-16 pt-8 border-t border-gray-200 text-center text-gray-500">
            <p>&copy; 2024 HasPHP Framework v2.0 - Built with ‚ù§Ô∏è and OpenSwoole</p>
        </footer>
    </div>

    <script>
        function blogApp() {
            return {
                activeTab: 'posts',
                loading: false,
                posts: [],
                users: [],
                tags: [],
                stats: {},
                postsFilter: '',
                testEndpoint: '/api/posts',
                apiResponse: null,

                init() {
                    this.loadStats();
                    this.loadPosts();
                },

                async apiCall(endpoint, options = {}) {
                    try {
                        this.loading = true;
                        const response = await fetch('{{ api_base_url }}' + endpoint, {
                            headers: {
                                'Content-Type': 'application/json',
                                ...options.headers
                            },
                            ...options
                        });
                        
                        if (!response.ok) {
                            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                        }
                        
                        const data = await response.json();
                        return data;
                    } finally {
                        this.loading = false;
                    }
                },

                async loadStats() {
                    try {
                        const data = await this.apiCall('/api/stats');
                        this.stats = data.success ? data.data : {};
                    } catch (error) {
                        console.error('Error loading stats:', error);
                    }
                },

                async loadPosts() {
                    try {
                        const query = this.postsFilter ? '?' + this.postsFilter : '';
                        const data = await this.apiCall('/api/posts' + query);
                        this.posts = data.success ? data.data : [];
                    } catch (error) {
                        console.error('Error loading posts:', error);
                        this.posts = [];
                    }
                },

                async loadUsers() {
                    if (this.users.length > 0) return; // Cache users
                    
                    try {
                        const data = await this.apiCall('/api/users');
                        this.users = data.success ? data.data : [];
                    } catch (error) {
                        console.error('Error loading users:', error);
                        this.users = [];
                    }
                },

                async loadTags() {
                    if (this.tags.length > 0) return; // Cache tags
                    
                    try {
                        const data = await this.apiCall('/api/tags');
                        this.tags = data.success ? data.data : [];
                    } catch (error) {
                        console.error('Error loading tags:', error);
                        this.tags = [];
                    }
                },

                async viewPost(slug) {
                    try {
                        const data = await this.apiCall(`/api/posts/${slug}`);
                        if (data.success) {
                            alert(`Post: ${data.data.title}\n\nViews: ${data.data.views_count}\nComments: ${data.data.comments?.length || 0}`);
                        }
                    } catch (error) {
                        console.error('Error loading post:', error);
                    }
                },

                async filterByTag(slug) {
                    this.activeTab = 'posts';
                    this.postsFilter = `tag=${slug}`;
                    this.loadPosts();
                },

                async testApiCall() {
                    try {
                        const data = await this.apiCall(this.testEndpoint);
                        this.apiResponse = data;
                    } catch (error) {
                        this.apiResponse = { error: error.message };
                    }
                },

                formatDate(dateString) {
                    return new Date(dateString).toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'short',
                        day: 'numeric'
                    });
                },

                $watch: {
                    activeTab(newTab) {
                        if (newTab === 'users') this.loadUsers();
                        if (newTab === 'tags') this.loadTags();
                    }
                }
            }
        }
    </script>
</body>
</html>
